/*
    Given an index k, return the kth row of the Pascal's triangle.
    For example, given k = 3,
    Return [1,3,3,1].
    
    Note:
    Could you optimize your algorithm to use only O(k) extra space?
*/
public class Solution {
    public List<Integer> getRow(int rowIndex) {                         // rowIndex start from level 0
        List<Integer> cur = new ArrayList<Integer>();
        cur.add(1);
        for(int i=1; i<=rowIndex; i++){
            List<Integer> next = new ArrayList<Integer>();
            next.add(1);
            for(int j=1; j<=cur.size()-1; j++){
                next.add(cur.get(j) + cur.get(j-1));
            }
            next.add(1);
            cur = next;
        }
        return cur;
    }
}
