/*

  Given two words word1 and word2, find the minimum number 
  of steps required to convert word1 to word2. (each operation is counted as 1 step.)
  
  You have the following 3 operations permitted on a word:
  
  a) Insert a character
  b) Delete a character
  c) Replace a character
*/


public class Solution {
    public int minDistance(String word1, String word2) {
        int[][] M = new int[word1.length() + 1][word2.length() + 1];
        for(int i = 1; i < M.length; i++){
            M[i][0] = i;
        }
        for(int i = 1; i < M[0].length; i++){
            M[0][i] = i;
        }
        for(int i = 1; i < M.length; i++){
            for(int j = 1; j < M[i].length; j++){
                if(word1.charAt(i - 1) == word2.charAt(j - 1)){
                    M[i][j] = M[i-1][j-1];
                }
                else{
                    M[i][j] = Math.min(M[i-1][j-1], Math.min(M[i-1][j], M[i][j-1])) + 1;
                }
            }
        }
        return M[M.length - 1][M[0].length - 1];
    }
}
