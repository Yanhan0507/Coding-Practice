/*
  Note: This is an extension of House Robber.
  
  After robbing those houses on that street, the 
  thief has found himself a new place for his thievery
  so that he will not get too much attention. This time,
  all houses at this place are arranged in a circle. That
  means the first house is the neighbor of the last one. 
  Meanwhile, the security system for these houses remain 
  the same as for those in the previous street.
  
  Given a list of non-negative integers representing the amount 
  of money of each house, determine the maximum amount of money 
  you can rob tonight without alerting the police.
*/
public class Solution {
    public int rob(int[] nums) {
       if(nums.length == 0){
           return 0;
       }
       if(nums.length == 1){
           return nums[0];
       }
       if(nums.length == 2){
           return Math.max(nums[0], nums[1]);
       }
       int first = nums[1];
       int second = Math.max(nums[1],nums[2]);
       int max1 = second;
       for(int i = 3; i < nums.length; i ++){
            max1 = Math.max(first + nums[i], second);
            first = second;
            second = max1;
       }
       first = nums[0];
       second = Math.max(nums[1], nums[0]);
       int max2 = second;
       for(int i = 2; i < nums.length - 1; i++){
           max2 = Math.max(first + nums[i], second);
           first = second;
           second = max2;
       }
       return Math.max(max1, max2);
    }
}
