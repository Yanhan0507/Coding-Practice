/*
    Given an array S of n integers, find three integers in S such that 
    the sum is closest to a given number, target. Return the sum of the three integers. 
    You may assume that each input would have exactly one solution.
    For example, given array S = {-1 2 1 -4}, and target = 1.
    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
*/
// the same method as 3 sum, remember to record both current minimal difference, and the value.
public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int result = Integer.MAX_VALUE;
        int record = Integer.MAX_VALUE;
        for(int i=0; i<= nums.length-3; i++){
            int start = i+1;
            int end = nums.length-1;
            while(start<end){
                int value = nums[start] + nums[end] + nums[i];
                int dif = Math.abs(value - target);
                if(dif < record){
                    result = value;
                    record = dif;
                }
                if(value == target){
                    return value;
                }
                else if(value < target){
                    start++;
                }
                else{
                    end--;
                }
            }
        }
        return result;
    }
}
