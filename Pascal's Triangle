/*
  Given numRows, generate the first numRows of Pascal's triangle.
  
  For example, given numRows = 5,
  Return
  
  [
       [1],
      [1,1],
     [1,2,1],
    [1,3,3,1],
   [1,4,6,4,1]
  ]
*/

public class Solution {
	public List<List<Integer>> generate(int numRows) {   
		List<List<Integer>> result = new ArrayList<List<Integer>>(numRows);
		List<Integer> cur = new ArrayList<Integer>();
	    if(numRows == 0){
	        return result;
	    }
		cur.add(1);
		result.add(cur);                                // remember to handle the corner case.
		for(int i=1; i<numRows; i++){
			List<Integer> tmp = new ArrayList<Integer>();
			tmp.add(1);
			for(int j=1; j<=cur.size()-1; j++){
				tmp.add(cur.get(j-1) + cur.get(j));
			}
			tmp.add(1);
			cur = tmp;
			result.add(new ArrayList<Integer>(cur));
		}
		return result;
	}
}
