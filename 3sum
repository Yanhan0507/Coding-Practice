/*
  Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.
  
  Note:
  Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
  The solution set must not contain duplicate triplets.
      For example, given array S = {-1 0 1 2 -1 -4},
  
      A solution set is:
      (-1, 0, 1)
      (-1, -1, 2)
*/
public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);                                      // dont forget to sort the Array
        Set<List<Integer>> set = new HashSet<List<Integer>>();
        for(int i=0; i<=nums.length-3; i++){                    // The first element is fixed
            int start = i + 1;
            int end = nums.length - 1;
            int value = 0 - nums[i];
            while(start < end){
                if(value == nums[start] + nums[end]){
                    List<Integer> list = new ArrayList<Integer>();
                    list.add(nums[i]);
                    list.add(nums[start]);
                    list.add(nums[end]);
                    set.add(list);
                    start ++;
                    end --;
                }
                else if(value < nums[start] + nums[end]){
                    end--;
                }
                else{
                    start++;
                }
            }
        }
        return new ArrayList<List<Integer>>(set);
    }
}
