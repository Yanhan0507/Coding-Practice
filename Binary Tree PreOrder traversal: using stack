/*
  Given a binary tree, return the preorder traversal of its nodes' values.
  
  For example:
  Given binary tree {1,#,2,3},
     1
      \
       2
      /
     3
  return [1,2,3].
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<TreeNode>();
        List<Integer> result = new ArrayList<Integer>();
        if(root == null){
            return result;
        }
        stack.push(root);
        while(!stack.empty()){
            TreeNode t = stack.pop();
            result.add(t.val);
            if(t.right != null){
                stack.push(t.right);
            }
            if(t.left != null){
                stack.push(t.left);
            }
        }
        return result;
    }
    
}
