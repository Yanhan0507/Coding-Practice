/*
 	 Given a sorted linked list, delete all duplicates such that each element appear only once.
	 For example,
	 Given 1->1->2, return 1->2.
     Given 1->1->2->3->3, return 1->2->3.
*/

public class Solution{

	public ListNode deleteDuplicates(ListNode head) {
        if(head == null){
    		return head;
    	}
        ListNode cur = head;
        while(cur.next != null){
        	if(cur.val == cur.next.val){
        		ListNode tmp = cur.next;
        		cur.next = tmp.next;
        		tmp.next = null;
        	}
        	else{
        		cur = cur.next;
        	}
        }
        return head;
    }
	
	public void show(ListNode head){
		while(head != null){
			System.out.println(head.val);
			head = head.next;
		}
	}
	
	public static void main(String[] args){
		Solution s = new Solution();
		ListNode head = new ListNode(1);
		ListNode n1 = new ListNode(1);
		ListNode n2 = new ListNode(3);
		ListNode n3 = new ListNode(4);
		ListNode n4 = new ListNode(5);
		ListNode n5 = new ListNode(5);
		ListNode n6 = new ListNode(7);
		head.next = n1;
		n1.next = n2;
		n2.next = n3;
		n3.next = n4;
		n4.next = n5;
		n5.next = n6;
		n6.next = null;
		s.show(s.deleteDuplicates(head));
	}
}
