/*
Given a list of non negative integers, arrange them such that they form the largest number.

For example, given [3, 30, 34, 5, 9], the largest formed number is 9534330.

Note: The result may be very large, so you need to return a string instead of an integer.

Credits:
Special thanks to @ts for adding this problem and creating all test cases.
*/
public class Solution {
    public String largestNumber(int[] nums) {
        // attention to 0 and 0, 00
        String[] cand = new String[nums.length];
        for(int i = 0; i < nums.length; i++){
            cand[i] = nums[i] + "";
        }
        Arrays.sort(cand, new Comparator<String>(){
            public int compare(String s1, String s2){
                int length = Math.min(s1.length(), s2.length());
                for(int i = 0; i < length; i++){
                    int num1 = s1.charAt(i);
                    int num2 = s2.charAt(i);
                    if(num1 > num2){
                        return 1;
                    }
                    else if(num1 < num2){
                        return -1;
                    }
                }
                if(length == s1.length() && length == s2.length()){
                    return 0;
                }
                if(length < s1.length()){
                    s1 = s1.substring(length);
                }
                else{
                    s2 = s2.substring(length);
                }
                return compare(s1, s2);
            }
        });
        StringBuilder result = new StringBuilder();
        for(int i = cand.length - 1; i >= 0; i--){
            result.append(cand[i]);
        }
        boolean allZero = true;
        for(int i = 0; i < result.length(); i++){
            if(result.charAt(i) != '0'){
                allZero = false;
                break;
            }
        }
        if(allZero){
            return "0";
        }
        return result.toString();
        
    }
}
