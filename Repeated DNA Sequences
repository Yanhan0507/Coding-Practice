public class Solution {
/*
    All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA,     it is sometimes useful to identify repeated sequences within the DNA.

    Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

    For example,

    Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

    Return:
    ["AAAAACCCCC", "CCCCCAAAAA"].
*/
        public List<String> findRepeatedDnaSequences(String s) {
    	List<String> result = new ArrayList<String>();
    	HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
    	for(int i=0; i<s.length() - 9; i++){
    		String tmp = s.substring(i, i + 10);
    		int key = convert(tmp);
    		if(map.containsKey(key)){
    			if(map.get(key) == 1){
    				result.add(tmp);
    				map.put(key, 2);
    			}
    		}
    		else{
    			map.put(key, 1);
    		}
    	}
    	return result;
    }
    
    public int convert(String str){
    	int res = 0;
    	for(int i=0; i<str.length(); i++){
    		if(str.charAt(i) == 'A'){
    			res *= 4;
    		}
    		else if(str.charAt(i) == 'T'){
    			res = res*4 + 1;
    		}
    		else if(str.charAt(i) == 'C'){
    			res = res * 4 + 2;
    		}
    		else if(str.charAt(i) == 'G'){
    			res = res * 4 + 3;
    		}
    	}
    	return res;
    }
}
