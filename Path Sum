/*
  Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.
  
  For example:
  Given the below binary tree and sum = 22,
                5
               / \
              4   8
             /   / \
            11  13  4
           /  \      \
          7    2      1
  return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 
 // 不能先上车后买票 1 null 2, 1, 只有根节点不能算path
 // 只有一个root null, return false
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if(root == null){
            return false;
        }
        return helper(root, sum);
    }
    
    private boolean helper(TreeNode root, int sum){
        sum -= root.val;
        if(root.left == null && root.right == null){
            return sum == 0;
        }
        if(root.left == null){
            return helper(root.right, sum);
        }
        if(root.right == null){
            return helper(root.left, sum);
        }
        return helper(root.right, sum) || helper(root.left, sum);
    }
}
