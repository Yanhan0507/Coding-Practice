/*
  Given an unsorted array of integers, find the length of the longest consecutive elements sequence.
  
  For example,
  Given [100, 4, 200, 1, 3, 2],
  The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.
  
  Your algorithm should run in O(n) complexity.
*/


public class Solution {
    public int longestConsecutive(int[] nums) {
        Set<Integer> set = new HashSet<Integer>();
        for(int i: nums){
            set.add(i);
        }
        int max = 0;
        for(int i: nums){
            int curLen = 0;
            if(set.contains(i)){
                curLen = 1;
                set.remove(i);
            }
            int left = i, right = i;
            while(set.contains(left - 1)){
                curLen++;
                left--;
                set.remove(left);
            }
            while(set.contains(right + 1)){
                curLen++;
                right++;
                set.remove(right);
            }
            max = Math.max(max, curLen);
        }
        return max;
    }
}



// o(nlogn) solution is trivial
public class Solution {
    public int longestConsecutive(int[] nums) {
        if(nums == null || nums.length == 0){
            return 0;
        }
        Arrays.sort(nums);
        int length = 1;
        int curLen = 1;
        for(int i = 1; i<nums.length; i++){
            if(nums[i] == nums[i-1] + 1){
                curLen++;
            }
            else if(nums[i] != nums[i-1]){
                curLen = 1;
            }
            length = Math.max(length, curLen);
        }
        return length;
    }
}
