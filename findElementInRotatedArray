public class Solution{
	
	public int findElementInRotatedArray(int[] array, int target){
		int index = findIndex(array);
		int a = binarySearch(array, target, 0, index -1);
		return a != -1? a : binarySearch(array, target, index, array.length - 1);
	}
	
	private int binarySearch(int[] array, int target, int start, int end){
		while(start < end){
			int mid = (start + end)/2;
			if(array[mid] == target){
				return mid;
			}
			else if(array[mid] > target){
				end = mid - 1;
			}
			else{
				start = mid + 1;
			}
		}
		return -1;
	}
	
	private int findIndex(int[] array){
		int start = 0;
		int end = array.length - 1;
		int mid = (start + end)/2;
		while(start < end){
			if (array[mid] < array[end]){
				end = mid;
			}
			else{
				start = mid + 1;
			}
			mid = (start + end)/2;
		}
		return start;
	}
	
    public static void main(String[] args){
    	Solution s = new Solution();
    	int[] array1 = new int[]{15, 16, 19, 20, 25, 1, 3, 4, 5, 7, 10, 14};
    	System.out.println(s.findElementInRotatedArray(array1, 5));
    	int[] array2 = new int[]{1, 2, 3, 4, 5, 6};
    	System.out.println(s.findElementInRotatedArray(array2, 5));
    	System.out.println(s.findElementInRotatedArray(new int[]{}, 5));
    }
}
