/*
  Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.
  Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list 
  should become 1 -> 2 -> 4 after calling your function.
*/

// cuz we can only move forward, so the only way we can do is to assign the value for each node to its previous
// node, and delete the last one.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void deleteNode(ListNode node) {
        ListNode prev = node;
        while(node.next != null){
            node.val = node.next.val;
            prev = node;
            node = node.next;
        }
        prev.next = null;
    }
}
