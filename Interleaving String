/*
  Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.
  
  For example,
  Given:
  s1 = "aabcc",
  s2 = "dbbca",
  
  When s3 = "aadbbcbcac", return true.
  When s3 = "aadbbbaccc", return false.
*/
public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if(s1.length() + s2.length() != s3.length()){
            return false;
        }
        boolean[][] M = new boolean[s1.length() + 1][s2.length() + 1];
        M[0][0] = true;
        for(int i = 1; i <= s1.length(); i++){
            if(s1.charAt(i-1) == s3.charAt(i-1)){
                M[i][0] = true;
            }
            else{
                break;
            }
        }
        for(int i = 1; i <= s2.length(); i++){
            if(s2.charAt(i-1) == s3.charAt(i-1)){
                M[0][i] = true;
            }
            else{
                break;
            }
        }
        for(int i = 1; i <= s1.length(); i++){
            for(int j = 1; j <= s2.length(); j++){
                char cur = s3.charAt(i+j-1);
                M[i][j] = (M[i-1][j] && s1.charAt(i-1) == cur) || (M[i][j-1] && s2.charAt(j-1) == cur);
            }
        }
        return M[M.length - 1][M[0].length - 1];
    }
}
