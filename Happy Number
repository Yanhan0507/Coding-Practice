/*
  Write an algorithm to determine if a number is "happy".
  
  A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.
  
  Example: 19 is a happy number
  
  12 + 92 = 82
  82 + 22 = 68
  62 + 82 = 100
  12 + 02 + 02 = 1
*/


public class Solution {
    public boolean isHappy(int n) {
        Set<Integer> used = new HashSet<Integer>();
        while(n != 1){
            n = convert(n);
            if(used.contains(n)){
                return false;
            }
            used.add(n);
        }
        return true;
    }
    
    public int convert(int target){
        String str = "" + target;
        int result = 0;
        for(int i = 0; i < str.length(); i++){
            int tmp = str.charAt(i) - '0';
            result += tmp*tmp; 
        }
        return result;
    }
    // I am boring enough to implement the second way
    public int convert1(int target){
        int sum = 0;
        while(target != 0){
            int tmp = target % 10;
            sum += tmp*tmp;
            target /= 10;
        }
        return sum;
    }
}
