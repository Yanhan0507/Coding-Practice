
/*
  Given an integer array of size n, find all elements that appear more than ⌊ n/4 ⌋ times. 
  The algorithm should run in linear time and in O(1) space.
*/
public class Solution {
	// there are at most two candidates, so firstly find the two largest numbers
	// we just need to find the largest two candidates, dont mind which one is the largest
	// and which one is the largest. 
	// for the given number nums[i], if it equals to n1, we dont need to decrease the counter2 by
	// 1, cuz it does not affect the relation between n2 and the rest elements(expect n1, n2)
	// 总之，我们只关心最大的2个(n1, n2)是谁，每次都是这2个的频率和其他所有的数比，如果n1被匹配到了，n2并不用减1，
	// 因为n2和其他元素的频率大小关系不变.如果都没匹配上，两个都要减1，因为他们被其他数取代的概率都增加了

    public List<Integer> majorityElement(int[] nums) {
        List<Integer> result = new ArrayList<Integer>();
        int cand1 = 0, cand2 = 0, cand3 = 0, counter1 = 0, counter2 = 0, counter3 = 0;
        for(int i=0; i<nums.length; i++){
            if(cand1 == nums[i] || counter1 == 0){
                cand1 = nums[i];
                counter1++;
            }
            else if(cand2 == nums[i] || counter2 == 0){
                cand2 = nums[i];
                counter2++;
            }
            else if(cand3 == nums[i] || counter3 == 0){
            	cand3 = nums[i];
            	counter3++;
            }
            else{
                counter1--;
                counter2--;
                counter3--;
            }
        }
        counter1 = 0;
        counter2 = 0;
        counter3 = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] == cand1){
                counter1++;
            }
            else if(nums[i] == cand2){ // so if cand1 == 0, and cand == 0(by default)
                counter2++;
            }
            else if(nums[i] == cand3){
            	counter3++;
            }
        }
        if(counter1 > nums.length/4){
            result.add(cand1);
        }
        if(counter2 > nums.length/4){
            result.add(cand2);
        }
        if(counter3 > nums.length/4){
            result.add(cand3);
        }
        return result;
    }
    
    public static void main(String[] args){
    	Solution s = new Solution();
    	System.out.println(s.majorityElement(new int[]{6, 6, 6, 4, 4, 4, 4, 5, 5, 5, 10}));
    }
}
