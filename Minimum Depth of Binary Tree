/*
    Given a binary tree, find its minimum depth.

    The minimum depth is the number of nodes along
    the shortest path from the root node down to 
    the nearest leaf node.
*/


/*
  
  
  				 1
  				/ 
  			   2
  minimal depth is 2, rather than 1. cuz 2 - > null is not a path, when there is only one path,
  we should count thus path rather than 0
 
 */
public class Solution { 
	
    public int minDepth(TreeNode root) {
        if(root == null){
        	return 0;
        }
        if(root.right == null){
        	return minDepth(root.left) + 1;
        }
        else if(root.left == null){
        	return minDepth(root.right) + 1;
        }
        else{
        	 return Math.max(minDepth(root.right), minDepth(root.left)) + 1;
        }  
    }
}
