/*
  The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: 
  (you may want to display this pattern in a fixed font for better legibility)
  
  P   A   H   N
  A P L S I I G
  Y   I   R
  And then read line by line: "PAHNAPLSIIGYIR"
  Write the code that will take a string and make this conversion given a number of rows:
  
  string convert(string text, int nRows);
  convert("PAYPALISHIRING", 3) should return "PAHNAPLSIIGYIR".
*/


//  we consider each  P A Y P as a part, (0 -> 2*numRows - 3) (2*numRows - 2 elements), P, A, H, N is the start point of each
//  palindrome, namely, 0, 2*numRows - 2, 4*numRows - 4, so we mode in by 2*numRows - 2.

public class Solution {
    public String convert(String s, int numRows) {
        if(numRows == 1 || numRows == 0){
            return s;
        }
        ArrayList<List<Character>> result = new ArrayList<List<Character>>();
        for(int i = 0; i < numRows; i++){
            result.add(new ArrayList<Character>());
        }
        for(int i=0; i < s.length(); i++){
            char ch = s.charAt(i);
            int index = i % (2*numRows - 2);
            if(index > numRows - 1){
                index = 2*numRows - 2 - index;
            }
            result.get(index).add(ch);
        }
        StringBuilder sb = new StringBuilder();
        for(int i = 0 ; i < result.size(); i++){
            List<Character> list = result.get(i);
            for(int j = 0; j < list.size(); j++){
                sb.append(list.get(j));
            }
        }
        return sb.toString();
    }
}
