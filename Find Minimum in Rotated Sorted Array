/*
	Find Minimum in Rotated Sorted Array 
*/

public class Solution {
	
	// compare the nums[mid] with nums[end]
	// if the nums[mid] > nums[end]  -> the last half part is not sorted -> (mid + 1, end)
	// if the nums[mid] < num[end]  -> the last half part is sorted -> (start, mid)
    public int findMin(int[] nums) {
    	if(nums.length == 0){
    		return 0;
    	}
        int start = 0;
        int end = nums.length - 1;
        while(start < end){
        	int mid = (start + end)/2;
        	if(nums[mid] > nums[end]){
        		start = mid + 1;
        	}
        	else{
        		end = mid;
        	}
        }
        return nums[start];
    }
    
    // brute force solution
    
    public int findMin1(int[] nums){
        for(int i = 1; i < nums.length; i++){
            if(nums[i] < nums[i-1]){
                return nums[i];
            }
        }
        return nums[0];
    }
}
